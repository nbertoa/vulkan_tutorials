# To build a new Visual Studio solution and use Vulkan, you should do the following:

- Download and install Vulkan SDK from https://www.lunarg.com/vulkan-sdk/

- Create a Visual Studio Solution as an Empty Project.

- Set x64

# Go to Project properties -> set All Configurations and x64

- Go to Project properties -> Debugging -> set $(OutDir) in Working Directory

- Go to project properties -> General -> Configuration Type -> choose Aplication(.exe)

- Go to project properties -> C/C++ -> General -> add the following in Additional Include Directories
(if Vulkan version or installation directory is different, then change the first line as needed) 
C:\VulkanSDK\1.1.108.0\Include
$(SolutionDir)../external\glm
$(SolutionDir)../external\glfw-3.3.bin.WIN64\include
$(SolutionDir)../external\tbb\include
$(SolutionDir)../

- Go to project properties -> Linker -> General -> add the following in Additional Library Directories
(if Vulkan version or installation directory is different, then change the first line as needed)
C:\VulkanSDK\1.1.108.0\Lib
$(SolutionDir)../external\glfw-3.3.bin.WIN64\lib-vc2019
$(SolutionDir)../external\tbb\lib

- Go to project properties -> Linker -> Input -> add the following in Additional Dependencies
vulkan-1.lib
glfw3.lib

# Go to Project properties -> set Debug

- Go to project properties -> Linker -> Input -> add the following in Additional Dependencies
tbb_debug.lib
tbb_preview_debug.lib
tbbmalloc_debug.lib
tbbproxy_debug.lib


# Go to Project properties -> set Release.

- Go to project properties -> C/C++ -> Preprocessor -> add NDEBUG in Preprocessor Definitions

- Go to project properties -> Linker -> Input -> add the following in Additional Dependencies
tbb.lib
tbb_preview.lib
tbbmalloc.lib
tbbproxy.lib


- Add main.cpp file with the following code
#define GLFW_INCLUDE_VULKAN
#include <GLFW/glfw3.h>

#define GLM_FORCE_RADIANS
#define GLM_FORCE_DEPTH_ZERO_TO_ONE
#include <glm/vec4.hpp>
#include <glm/mat4x4.hpp>

int main() {
	glfwInit();
	glfwWindowHint(GLFW_CLIENT_API, GLFW_NO_API);
	GLFWwindow* window = glfwCreateWindow(800, 600, "Vulkan window", nullptr, nullptr);

	glm::mat4 matrix;
	glm::vec4 vec;
	auto test = matrix * vec;

	while (!glfwWindowShouldClose(window)) {
		glfwPollEvents();
	}

	glfwDestroyWindow(window);

	glfwTerminate();
}

- Compile in Debug/Release modes and run. You should see a window with "Vulkan window" title.